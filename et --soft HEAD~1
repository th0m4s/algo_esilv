[1mdiff --git a/MenuAlgo.sln b/MenuAlgo.sln[m
[1mindex 0937d2b..24fb94c 100644[m
[1m--- a/MenuAlgo.sln[m
[1m+++ b/MenuAlgo.sln[m
[36m@@ -6,27 +6,63 @@[m [mMinimumVisualStudioVersion = 10.0.40219.1[m
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "OutilsTD", "OutilsTD\OutilsTD.csproj", "{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}"[m
 EndProject[m
 Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "MenuAlgo", "MenuAlgo\MenuAlgo.csproj", "{9EC058BA-B085-49B0-A670-0854B5DFD9B6}"[m
[32m+[m	[32mProjectSection(ProjectDependencies) = postProject[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C} = {1472EAE4-CF5E-4C19-9630-316E086E0F4C}[m
[32m+[m	[32mEndProjectSection[m
 EndProject[m
 Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "RuntimeCompiler", "RuntimeCompiler\RuntimeCompiler.csproj", "{54E15D5E-B1FC-44DF-9467-9496570E3236}"[m
 EndProject[m
[32m+[m[32mProject("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "SourceTD.Fody", "SourceTD.Fody\SourceTD.Fody.csproj", "{1472EAE4-CF5E-4C19-9630-316E086E0F4C}"[m
[32m+[m[32mEndProject[m
 Global[m
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution[m
 		Debug|Any CPU = Debug|Any CPU[m
[32m+[m		[32mRelease Light|Any CPU = Release Light|Any CPU[m
[32m+[m		[32mRelease NoCompiler|Any CPU = Release NoCompiler|Any CPU[m
[32m+[m		[32mRelease NoSource|Any CPU = Release NoSource|Any CPU[m
 		Release|Any CPU = Release|Any CPU[m
 	EndGlobalSection[m
 	GlobalSection(ProjectConfigurationPlatforms) = postSolution[m
 		{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
 		{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release Light|Any CPU.ActiveCfg = Release Light|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release Light|Any CPU.Build.0 = Release Light|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release NoCompiler|Any CPU.ActiveCfg = Release NoCompiler|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release NoCompiler|Any CPU.Build.0 = Release NoCompiler|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release NoSource|Any CPU.ActiveCfg = Release NoSource|Any CPU[m
[32m+[m		[32m{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release NoSource|Any CPU.Build.0 = Release NoSource|Any CPU[m
 		{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
 		{C09688DE-E4AD-48E4-B9E3-0531490EB4E2}.Release|Any CPU.Build.0 = Release|Any CPU[m
 		{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
 		{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release Light|Any CPU.ActiveCfg = Release Light|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release Light|Any CPU.Build.0 = Release Light|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release NoCompiler|Any CPU.ActiveCfg = Release NoCompiler|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release NoCompiler|Any CPU.Build.0 = Release NoCompiler|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release NoSource|Any CPU.ActiveCfg = Release NoSource|Any CPU[m
[32m+[m		[32m{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release NoSource|Any CPU.Build.0 = Release NoSource|Any CPU[m
 		{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
 		{9EC058BA-B085-49B0-A670-0854B5DFD9B6}.Release|Any CPU.Build.0 = Release|Any CPU[m
 		{54E15D5E-B1FC-44DF-9467-9496570E3236}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
 		{54E15D5E-B1FC-44DF-9467-9496570E3236}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release Light|Any CPU.ActiveCfg = Release Light|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release Light|Any CPU.Build.0 = Release Light|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release NoCompiler|Any CPU.ActiveCfg = Release NoCompiler|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release NoCompiler|Any CPU.Build.0 = Release NoCompiler|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release NoSource|Any CPU.ActiveCfg = Release NoSource|Any CPU[m
[32m+[m		[32m{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release NoSource|Any CPU.Build.0 = Release NoSource|Any CPU[m
 		{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
 		{54E15D5E-B1FC-44DF-9467-9496570E3236}.Release|Any CPU.Build.0 = Release|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Debug|Any CPU.Build.0 = Debug|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release Light|Any CPU.ActiveCfg = Release Light|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release Light|Any CPU.Build.0 = Release Light|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release NoCompiler|Any CPU.ActiveCfg = Release NoCompiler|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release NoCompiler|Any CPU.Build.0 = Release NoCompiler|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release NoSource|Any CPU.ActiveCfg = Release NoSource|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release NoSource|Any CPU.Build.0 = Release NoSource|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release|Any CPU.ActiveCfg = Release|Any CPU[m
[32m+[m		[32m{1472EAE4-CF5E-4C19-9630-316E086E0F4C}.Release|Any CPU.Build.0 = Release|Any CPU[m
 	EndGlobalSection[m
 	GlobalSection(SolutionProperties) = preSolution[m
 		HideSolutionNode = FALSE[m
[1mdiff --git a/MenuAlgo/App.config b/MenuAlgo/App.config[m
[1mindex ecdcf8a..f356db4 100644[m
[1m--- a/MenuAlgo/App.config[m
[1m+++ b/MenuAlgo/App.config[m
[36m@@ -1,6 +1,18 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32mï»¿<?xml version="1.0" encoding="utf-8"?>[m
 <configuration>[m
     <startup> [m
[31m-        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2"/>[m
[32m+[m[32m        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />[m
     </startup>[m
[32m+[m[32m  <runtime>[m
[32m+[m[32m    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">[m
[32m+[m[32m      <dependentAssembly>[m
[32m+[m[32m        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />[m
[32m+[m[32m        <bindingRedirect oldVersion="0.0.0.0-4.0.6.0" newVersion="4.0.6.0" />[m
[32m+[m[32m      </dependentAssembly>[m
[32m+[m[32m      <dependentAssembly>[m
[32m+[m[32m        <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />[m
[32m+[m[32m        <bindingRedirect oldVersion="0.0.0.0-4.2.0.1" newVersion="4.2.0.1" />[m
[32m+[m[32m      </dependentAssembly>[m
[32m+[m[32m    </assemblyBinding>[m
[32m+[m[32m  </runtime>[m
 </configuration>[m
[1mdiff --git a/MenuAlgo/FodyWeavers.xml b/MenuAlgo/FodyWeavers.xml[m
[1mindex 71304bd..3215847 100644[m
[1m--- a/MenuAlgo/FodyWeavers.xml[m
[1m+++ b/MenuAlgo/FodyWeavers.xml[m
[36m@@ -1,3 +1,3 @@[m
 ï»¿<Weavers xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="FodyWeavers.xsd">[m
[31m-  <Costura IncludeDebugSymbols='false' CreateTemporaryAssemblies='true'  />[m
[32m+[m[32m  <Costura IncludeDebugSymbols="false" CreateTemporaryAssemblies="true" />[m
 </Weavers>[m
\ No newline at end of file[m
[1mdiff --git a/MenuAlgo/FodyWeavers.xsd b/MenuAlgo/FodyWeavers.xsd[m
[1mindex 44a5374..0dca880 100644[m
[1m--- a/MenuAlgo/FodyWeavers.xsd[m
[1m+++ b/MenuAlgo/FodyWeavers.xsd[m
[36m@@ -90,6 +90,7 @@[m
             </xs:attribute>[m
           </xs:complexType>[m
         </xs:element>[m
[32m+[m[32m        <xs:element name="SourceTD" minOccurs="0" maxOccurs="1" type="xs:anyType" />[m
       </xs:all>[m
       <xs:attribute name="VerifyAssembly" type="xs:boolean">[m
         <xs:annotation>[m
[1mdiff --git a/MenuAlgo/MenuAlgo.csproj b/MenuAlgo/MenuAlgo.csproj[m
[1mindex ccc3647..d55e75c 100644[m
[1m--- a/MenuAlgo/MenuAlgo.csproj[m
[1m+++ b/MenuAlgo/MenuAlgo.csproj[m
[36m@@ -1,14 +1,13 @@[m
 ï»¿<?xml version="1.0" encoding="utf-8"?>[m
 <Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">[m
[31m-  <Import Project="..\packages\Costura.Fody.4.1.0\build\Costura.Fody.props" Condition="Exists('..\packages\Costura.Fody.4.1.0\build\Costura.Fody.props')" />[m
   <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />[m
   <PropertyGroup>[m
     <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>[m
     <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>[m
     <ProjectGuid>{9EC058BA-B085-49B0-A670-0854B5DFD9B6}</ProjectGuid>[m
[32m+[m[32m    <RuntimeIdentifier>win</RuntimeIdentifier>[m
     <OutputType>Exe</OutputType>[m
     <RootNamespace>AlgoEsilv</RootNamespace>[m
[31m-    <AssemblyName>AlgoEsilv</AssemblyName>[m
     <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>[m
     <FileAlignment>512</FileAlignment>[m
     <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>[m
[36m@@ -17,8 +16,41 @@[m
     </NuGetPackageImportStamp>[m
     <TargetFrameworkProfile />[m
   </PropertyGroup>[m
[32m+[m[32m  <Choose>[m
[32m+[m[32m    <When Condition="'$(Configuration)' == 'Debug'">[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv.Debug</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <When Condition="'$(Configuration)' == 'Release NoSource'">[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv.NoSource</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <When Condition="'$(Configuration)' == 'Release NoCompiler'">[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv.NoCompiler</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <When Condition="'$(Configuration)' == 'Release Light'">[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv.Light</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <When Condition="'$(Configuration)' == 'Release'">[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv.Release</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <Otherwise>[m
[32m+[m[32m      <PropertyGroup>[m
[32m+[m[32m        <AssemblyName>AlgoEsilv</AssemblyName>[m
[32m+[m[32m      </PropertyGroup>[m
[32m+[m[32m    </Otherwise>[m
[32m+[m[32m  </Choose>[m
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">[m
     <PlatformTarget>x64</PlatformTarget>[m
[32m+[m[32m    <RuntimeIdentifier>win-x64</RuntimeIdentifier>[m
     <DebugSymbols>true</DebugSymbols>[m
     <DebugType>full</DebugType>[m
     <Optimize>false</Optimize>[m
[36m@@ -41,18 +73,37 @@[m
   <PropertyGroup>[m
     <StartupObject>MenuAlgo.Program</StartupObject>[m
   </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release Light|AnyCPU'">[m
[32m+[m[32m    <OutputPath>bin\Release Light\</OutputPath>[m
[32m+[m[32m    <DefineConstants>TRACE;NO_SOURCE;NO_COMPILER</DefineConstants>[m
[32m+[m[32m    <Optimize>true</Optimize>[m
[32m+[m[32m    <DebugType>pdbonly</DebugType>[m
[32m+[m[32m    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m+[m[32m    <LangVersion>7.3</LangVersion>[m
[32m+[m[32m    <ErrorReport>prompt</ErrorReport>[m
[32m+[m[32m    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release NoSource|AnyCPU'">[m
[32m+[m[32m    <OutputPath>bin\Release NoSource\</OutputPath>[m
[32m+[m[32m    <DefineConstants>TRACE;NO_SOURCE</DefineConstants>[m
[32m+[m[32m    <Optimize>true</Optimize>[m
[32m+[m[32m    <DebugType>pdbonly</DebugType>[m
[32m+[m[32m    <PlatformTarget>AnyCPU</PlatformTarget>[m
[32m+[m[32m    <LangVersion>7.3</LangVersion>[m
[32m+[m[32m    <ErrorReport>prompt</ErrorReport>[m
[32m+[m[32m    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release NoCompiler|AnyCPU'">[m
[32m+[m[32m    <OutputPath>bin\Release NoCompiler\</OutputPath>[m
[32m+[m[32m    <DefineConstants>NO_COMPILER</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m[32m  <PropertyGroup>[m
[32m+[m[32m    <ApplicationIcon>logo.ico</ApplicationIcon>[m
[32m+[m[32m  </PropertyGroup>[m
   <ItemGroup>[m
[31m-    <Reference Include="Costura, Version=4.1.0.0, Culture=neutral, PublicKeyToken=9919ef960d84173d, processorArchitecture=MSIL">[m
[31m-      <HintPath>..\packages\Costura.Fody.4.1.0\lib\net40\Costura.dll</HintPath>[m
[31m-    </Reference>[m
[31m-    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">[m
[31m-      <HintPath>..\packages\Newtonsoft.Json.12.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>[m
[31m-    </Reference>[m
     <Reference Include="System" />[m
[31m-    <Reference Include="System.CodeDom, Version=5.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">[m
[31m-      <HintPath>..\packages\System.CodeDom.5.0.0\lib\net461\System.CodeDom.dll</HintPath>[m
[31m-    </Reference>[m
     <Reference Include="System.Core" />[m
[32m+[m[32m    <Reference Include="System.Numerics" />[m
     <Reference Include="System.Xml.Linq" />[m
     <Reference Include="System.Data.DataSetExtensions" />[m
     <Reference Include="Microsoft.CSharp" />[m
[36m@@ -63,31 +114,64 @@[m
   <ItemGroup>[m
     <Compile Include="Program.cs" />[m
     <Compile Include="Properties\AssemblyInfo.cs" />[m
[32m+[m[32m    <Compile Include="S1\S1_TD11.cs" />[m
     <Compile Include="S1\S1_TD8.cs" />[m
     <Compile Include="S1\S1_TD9.cs" />[m
     <Compile Include="S1\S1_TD10.cs" />[m
   </ItemGroup>[m
   <ItemGroup>[m
     <None Include="App.config" />[m
[31m-    <None Include="packages.config" />[m
   </ItemGroup>[m
   <ItemGroup>[m
     <ProjectReference Include="..\OutilsTD\OutilsTD.csproj">[m
       <Project>{c09688de-e4ad-48e4-b9e3-0531490eb4e2}</Project>[m
       <Name>OutilsTD</Name>[m
     </ProjectReference>[m
[31m-    <ProjectReference Include="..\RuntimeCompiler\RuntimeCompiler.csproj">[m
[31m-      <Project>{54E15D5E-B1FC-44DF-9467-9496570E3236}</Project>[m
[31m-      <Name>RuntimeCompiler</Name>[m
[31m-    </ProjectReference>[m
   </ItemGroup>[m
[32m+[m[32m  <Choose>[m
[32m+[m[32m    <When Condition="'$(Configuration)' != 'Release Light' And '$(Configuration)' != 'Release NoCompiler'">[m
[32m+[m[32m      <ItemGroup>[m
[32m+[m[32m        <ProjectReference Include="..\RuntimeCompiler\RuntimeCompiler.csproj">[m
[32m+[m[32m          <Project>{54E15D5E-B1FC-44DF-9467-9496570E3236}</Project>[m
[32m+[m[32m          <Name>RuntimeCompiler</Name>[m
[32m+[m[32m        </ProjectReference>[m
[32m+[m[32m      </ItemGroup>[m
[32m+[m[32m      <ItemGroup>[m
[32m+[m[32m        <PackageReference Include="Newtonsoft.Json">[m
[32m+[m[32m          <Version>12.0.3</Version>[m
[32m+[m[32m        </PackageReference>[m
[32m+[m[32m      </ItemGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m  </Choose>[m
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />[m
[31m-  <Import Project="..\packages\Fody.6.3.0\build\Fody.targets" Condition="Exists('..\packages\Fody.6.3.0\build\Fody.targets')" />[m
[31m-  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">[m
[31m-    <PropertyGroup>[m
[31m-      <ErrorText>Ce projet fait rÃ©fÃ©rence Ã  des packages NuGet qui sont manquants sur cet ordinateur. Utilisez l'option de restauration des packages NuGet pour les tÃ©lÃ©charger. Pour plus d'informations, consultez http://go.microsoft.com/fwlink/?LinkID=322105. Le fichier manquant est : {0}.</ErrorText>[m
[31m-    </PropertyGroup>[m
[31m-    <Error Condition="!Exists('..\packages\Fody.6.3.0\build\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Fody.6.3.0\build\Fody.targets'))" />[m
[31m-    <Error Condition="!Exists('..\packages\Costura.Fody.4.1.0\build\Costura.Fody.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Costura.Fody.4.1.0\build\Costura.Fody.props'))" />[m
[31m-  </Target>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <Content Include="FodyWeavers_IncludeSource.xml" />[m
[32m+[m[32m    <Content Include="FodyWeavers_NoSource.xml" />[m
[32m+[m[32m    <Content Include="logo.ico" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <WeaverFiles Include="C:\Users\Thomas\OneDrive - De Vinci\Projects\MenuAlgo\SourceTD.Fody\bin\Release Light\netstandard2.0\SourceTD.Fody.dll" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <PackageReference Include="Costura.Fody" PrivateAssets="all">[m
[32m+[m[32m      <Version>4.1.0</Version>[m
[32m+[m[32m    </PackageReference>[m
[32m+[m[32m    <PackageReference Include="Fody" PrivateAssets="all">[m
[32m+[m[32m      <Version>6.3.0</Version>[m
[32m+[m[32m      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>[m
[32m+[m[32m      <PrivateAssets>all</PrivateAssets>[m
[32m+[m[32m    </PackageReference>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <PropertyGroup>[m
[32m+[m[32m    <PreBuildEvent>for /f "delims=" %25%25i in ('"%25ProgramFiles(x86)%25\Microsoft Visual Studio\Installer\vswhere.exe" -latest -prerelease -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe') do set msbuildpath=%25%25i[m
[32m+[m[32m"%25msbuildpath%25" /t:restore /p:Configuration="$(ConfigurationName)" "$(ProjectPath)"[m
[32m+[m[32mset "exclude_source=false"[m
[32m+[m[32mIF "$(ConfigurationName)" == "Release NoSource" set exclude_source=true[m
[32m+[m[32mIF "$(ConfigurationName)" == "Release Light" set exclude_source=true[m
[32m+[m[32mIF "%25exclude_source%25" == "true"  ([m
[32m+[m[32mxcopy "$(ProjectDir)FodyWeavers_NoSource.xml" "$(ProjectDir)FodyWeavers.xml"* /Y[m
[32m+[m[32m) ELSE ([m
[32m+[m[32mxcopy "$(ProjectDir)FodyWeavers_IncludeSource.xml" "$(ProjectDir)FodyWeavers.xml"* /Y[m
[32m+[m[32m)</PreBuildEvent>[m
[32m+[m[32m  </PropertyGroup>[m
 </Project>[m
\ No newline at end of file[m
[1mdiff --git a/MenuAlgo/Program.cs b/MenuAlgo/Program.cs[m
[1mindex 299a048..654502c 100644[m
[1m--- a/MenuAlgo/Program.cs[m
[1m+++ b/MenuAlgo/Program.cs[m
[36m@@ -1,25 +1,64 @@[m
 ï»¿using System;[m
 using System.Collections.Generic;[m
 using System.Diagnostics;[m
[31m-using System.IO;[m
 using System.Linq;[m
 using System.Reflection;[m
 using System.Text.RegularExpressions;[m
 using OutilsTD;[m
[32m+[m[32musing System.IO;[m
[32m+[m[32m#if !NO_COMPILER[m
 using RuntimeCompiler;[m
[32m+[m[32m#endif[m
[32m+[m[32m#if !NO_SOURCE[m
[32m+[m[32musing Microsoft.CodeAnalysis.CSharp;[m
[32m+[m[32m#endif[m
 [m
 namespace MenuAlgo[m
 {[m
     class Program[m
     {[m
[32m+[m[32m        static void PrintCompileOptions()[m
[32m+[m[32m        {[m
[32m+[m[32m            Console.WriteLine("Options de compilation (v" + Assembly.GetExecutingAssembly().GetName().Version + ") :");[m
[32m+[m
[32m+[m[32m            // Affichage des sources[m
[32m+[m[32m#if NO_SOURCE[m
[32m+[m[32m            Console.WriteLine(" - Affichage des sources dÃ©sactivÃ©.");[m
[32m+[m[32m#else[m
[32m+[m[32m            Console.WriteLine(" - Affichage des sources activÃ©.");[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m            // Compilation sur le tas[m
[32m+[m[32m#if NO_COMPILER[m
[32m+[m[32m            Console.WriteLine(" - Compilation des fichiers locaux dÃ©sactivÃ©e.");[m
[32m+[m[32m#else[m
[32m+[m[32m            Console.WriteLine(" - Compilation des fichiers locaux activÃ©e.");[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m            // Marge[m
[32m+[m[32m            Console.WriteLine("");[m
[32m+[m[32m        }[m
[32m+[m
         static void Main(string[] args)[m
         {[m
             Console.WriteLine("ESILV - COURS D'ALGORITHMIQUE");[m
             Console.WriteLine("Exercices par Thomas LEDOS\n");[m
             // Ce programme dÃ©tecte automatiquement quels semestres, TD et exercices existent et propose un menu pour les lancer[m
 [m
[32m+[m[32m            PrintCompileOptions();[m
[32m+[m
[32m+[m[32m            string pattern = @"^S(?<s>\d+)_TD(?<td>\d+)$";[m
[32m+[m
[32m+[m[32m            List<Assembly> assemblies = new List<Assembly>();[m
[32m+[m[32m            assemblies.Add(Assembly.GetExecutingAssembly());[m
[32m+[m[32m            assemblies.AddRange(assemblies[0].GetReferencedAssemblies().Select(x => Assembly.Load(x)));[m
 [m
[31m-            CompilerExercices exercicesCompiler = new CompilerExercices(new FileInfo(Assembly.GetEntryAssembly().Location).DirectoryName);[m
[32m+[m[32m            string appFolder = new FileInfo(Assembly.GetEntryAssembly().Location).DirectoryName;[m
[32m+[m[32m#if !NO_SOURCE[m
[32m+[m[32m            SourcesManager.InitSources(appFolder);[m
[32m+[m[32m#endif[m
[32m+[m[32m#if !NO_COMPILER[m
[32m+[m[32m            CompilerExercices exercicesCompiler = new CompilerExercices(appFolder);[m
             if (exercicesCompiler.CheckFiles())[m
             {[m
                 Console.WriteLine("Compilation des fichiers locaux...");[m
[36m@@ -35,15 +74,10 @@[m [mnamespace MenuAlgo[m
                 Console.WriteLine("Fichiers locaux chargÃ©s.");[m
             }[m
 [m
[31m-            Dictionary<int, Dictionary<int, Type>> semestres = new Dictionary<int, Dictionary<int, Type>>();[m
[31m-            Dictionary<int, Semestre> objectsSemestres = new Dictionary<int, Semestre>();[m
[31m-[m
[31m-            string pattern = @"^S(?<s>\d+)_TD(?<td>\d+)$";[m
[31m-[m
[31m-            List<Assembly> assemblies = new List<Assembly>();[m
[31m-            assemblies.Add(Assembly.GetExecutingAssembly());[m
[31m-            assemblies.AddRange(assemblies[0].GetReferencedAssemblies().Select(x => Assembly.Load(x)));[m
             assemblies.AddRange(exercicesCompiler.LoadedAssemblies);[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m            SortedDictionary<int, KeyValuePair<Semestre, SortedDictionary<int, Type>>> semestres = new SortedDictionary<int, KeyValuePair<Semestre, SortedDictionary<int, Type>>>();[m
 [m
             foreach(Assembly assembly in assemblies)[m
             {[m
[36m@@ -57,26 +91,26 @@[m [mnamespace MenuAlgo[m
 [m
                         if (!semestres.ContainsKey(semestre))[m
                         {[m
[31m-                            semestres.Add(semestre, new Dictionary<int, Type>());[m
[31m-[m
                             Semestre objectSemestre = new Semestre(semestre);[m
[31m-                            objectsSemestres.Add(semestre, objectSemestre);[m
[32m+[m[32m                            semestres.Add(semestre, new KeyValuePair<Semestre, SortedDictionary<int, Type>>(objectSemestre, new SortedDictionary<int, Type>()));[m
                         }[m
 [m
[31m-                        semestres[semestre].Add(numeroTD, type);[m
[32m+[m[32m                        semestres[semestre].Value.Add(numeroTD, type);[m
                     }[m
                 }[m
             }[m
 [m
[32m+[m[32m            // semestres.OrderBy(pair => pair.Key).ToDictionary();[m
[32m+[m
             bool continuer = true;[m
             while(continuer)[m
             {[m
                 Console.WriteLine("\nListe des semestres disponibles :");[m
 [m
[31m-                foreach (KeyValuePair<int, Dictionary<int, Type>> semestre in semestres)[m
[32m+[m[32m                foreach (KeyValuePair<int, KeyValuePair<Semestre, SortedDictionary<int, Type>>> semestre in semestres)[m
                 {[m
[31m-                    int nombreTD = semestre.Value.Count;[m
[31m-                    Console.WriteLine(" - " + objectsSemestres[semestre.Key].Display() + " : " + nombreTD + " sÃ©ance" + (nombreTD == 1 ? "" : "s") + " de TD");[m
[32m+[m[32m                    int nombreTD = semestre.Value.Value.Count;[m
[32m+[m[32m                    Console.WriteLine(" - " + semestre.Value.Key.Display() + " : " + nombreTD + " sÃ©ance" + (nombreTD == 1 ? "" : "s") + " de TD");[m
                 }[m
 [m
                 Console.Write("\nEntre un numÃ©ro de semestre, 'c' pour voir le code source ou 'q' pour quitter : ");[m
[36m@@ -102,20 +136,19 @@[m [mnamespace MenuAlgo[m
                     continue;[m
                 }[m
 [m
[31m-                Semestre semestreObject = objectsSemestres[semestreId];[m
[31m-                Console.WriteLine("\nListe des TD disponibles pour ce semestre (" + semestreObject.Display() + ") :");[m
[32m+[m[32m                KeyValuePair<Semestre, SortedDictionary<int, Type>> semestrePair = semestres[semestreId];[m
[32m+[m[32m                Console.WriteLine("\nListe des TD disponibles pour ce semestre (" + semestrePair.Key.Display() + ") :");[m
 [m
[31m-                Dictionary<int, Type> semestreTypes = semestres[semestreId];[m
[31m-                Console.WriteLine(string.Join(", ", semestreTypes.Keys.Select(x => "TD" + x)));[m
[32m+[m[32m                Console.WriteLine(string.Join(", ", semestrePair.Value.Keys.Select(x => "TD" + x)));[m
 [m
                 Console.Write("\nEntre un numÃ©ro de TD ou 0 pour annuler : ");[m
                 int chosenTD = int.Parse(Console.ReadLine());[m
 [m
                 if(chosenTD > 0)[m
                 {[m
[31m-                    if(semestreTypes.ContainsKey(chosenTD))[m
[32m+[m[32m                    if(semestrePair.Value.ContainsKey(chosenTD))[m
                     {[m
[31m-                        GestionTD gestionTD = new GestionTD(semestreObject, chosenTD, semestreTypes[chosenTD]);[m
[32m+[m[32m                        GestionTD gestionTD = semestrePair.Key.GetGestionTD(chosenTD, semestrePair.Value[chosenTD]);[m
                         continuer = gestionTD.MenuExercice();[m
                     } else Console.WriteLine("Ce TD n'existe pas pour le semestre demandÃ©.\n");[m
                 }[m
[1mdiff --git a/MenuAlgo/Properties/AssemblyInfo.cs b/MenuAlgo/Properties/AssemblyInfo.cs[m
[1mindex 2ff613e..704c33a 100644[m
[1m--- a/MenuAlgo/Properties/AssemblyInfo.cs[m
[1m+++ b/MenuAlgo/Properties/AssemblyInfo.cs[m
[36m@@ -32,5 +32,5 @@[m [musing System.Runtime.InteropServices;[m
 // Vous pouvez spÃ©cifier toutes les valeurs ou indiquer les numÃ©ros de build et de rÃ©vision par dÃ©faut[m
 // en utilisant '*', comme indiquÃ© ci-dessousÂ :[m
 // [assembly: AssemblyVersion("1.0.*")][m
[31m-[assembly: AssemblyVersion("1.0.2.2")][m
[31m-[assembly: AssemblyFileVersion("1.0.2.2")][m
[32m+[m[32m[assembly: AssemblyVersion("1.1.0.4")][m
[32m+[m[32m[assembly: AssemblyFileVersion("1.1.0.4")][m
[1mdiff --git a/MenuAlgo/S1/S1_TD10.cs b/MenuAlgo/S1/S1_TD10.cs[m
[1mindex 00ccc0e..78e207a 100644[m
[1m--- a/MenuAlgo/S1/S1_TD10.cs[m
[1m+++ b/MenuAlgo/S1/S1_TD10.cs[m
[36m@@ -74,6 +74,21 @@[m [mnamespace MenuAlgo[m
             Console.WriteLine("La somme est " + somme);[m
         }[m
 [m
[32m+[m[32m        [Exercice("Somme d'entiers (sans consigne)")][m
[32m+[m[32m        static void Exercice7()[m
[32m+[m[32m        {[m
[32m+[m[32m            Console.WriteLine("L'exercice n'a pas de consigne!");[m
[32m+[m[32m            // le code ci-dessous ne se compile pas car somme et nombre ne sont pas initialisÃ©es[m
[32m+[m[32m            /*int somme;[m
[32m+[m[32m            int nombre;[m
[32m+[m[32m            Console.WriteLine("Entrez des nombres entiers :");[m
[32m+[m[32m            for(int i = 0; i < 10; i++)[m
[32m+[m[32m            {[m
[32m+[m[32m                somme = somme + nombre;[m
[32m+[m[32m            }[m
[32m+[m[32m            Console.WriteLine("La somme est " + somme);*/[m
[32m+[m[32m        }[m
[32m+[m
         [Exercice("Plus grand parmi 2 entiers")][m
         static void Exercice8()[m
         {[m
[36m@@ -97,6 +112,19 @@[m [mnamespace MenuAlgo[m
             }[m
         }[m
 [m
[32m+[m[32m        [Exercice("Observer la sortie du programme")][m
[32m+[m[32m        static void Exercice9()[m
[32m+[m[32m        {[m
[32m+[m[32m            int i = 1;[m
[32m+[m[32m            int j = 1;[m
[32m+[m[32m            int n = 4;[m
[32m+[m[32m            for (i = 1; i <= n; i++)[m
[32m+[m[32m                n--;[m
[32m+[m[32m            for (j = 1; j < i; j++)[m
[32m+[m[32m                i--;[m
[32m+[m[32m            Console.WriteLine(j);[m
[32m+[m[32m        }[m
[32m+[m
         [Exercice("Somme de 10 entiers")][m
         static void Exercice10()[m
         {[m
[1mdiff --git a/MenuAlgo/packages.config b/MenuAlgo/packages.config[m
[1mdeleted file mode 100644[m
[1mindex ad401bf..0000000[m
[1m--- a/MenuAlgo/packages.config[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-ï»¿<?xml version="1.0" encoding="utf-8"?>[m
[31m-<packages>[m
[31m-  <package id="Costura.Fody" version="4.1.0" targetFramework="net472" />[m
[31m-  <package id="Fody" version="6.3.0" targetFramework="net472" developmentDependency="true" />[m
[31m-  <package id="Newtonsoft.Json" version="12.0.3" targetFramework="net472" />[m
[31m-  <package id="System.CodeDom" version="5.0.0" targetFramework="net472" />[m
[31m-</packages>[m
\ No newline at end of file[m
[1mdiff --git a/OutilsTD/ExerciceAttribute.cs b/OutilsTD/ExerciceAttribute.cs[m
[1mindex d28c244..59be255 100644[m
[1m--- a/OutilsTD/ExerciceAttribute.cs[m
[1m+++ b/OutilsTD/ExerciceAttribute.cs[m
[36m@@ -5,8 +5,25 @@[m [mnamespace OutilsTD[m
     [AttributeUsage(AttributeTargets.Method)][m
     public class ExerciceAttribute : Attribute[m
     {[m
[32m+[m[32m        public int numeroExercice = -1;[m
[32m+[m[32m        public string keyExercice = "";[m
[32m+[m
         public string nomExercice;[m
 [m
[32m+[m[32m        public bool exerciceSource = false;[m
[32m+[m
[32m+[m[32m        public ExerciceAttribute(int numeroExercice, string nomExercice)[m
[32m+[m[32m        {[m
[32m+[m[32m            this.numeroExercice = numeroExercice;[m
[32m+[m[32m            this.nomExercice = nomExercice;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        public ExerciceAttribute(string keyExercice, string nomExercice)[m
[32m+[m[32m        {[m
[32m+[m[32m            this.keyExercice = keyExercice;[m
[32m+[m[32m            this.nomExercice = nomExercice;[m
[32m+[m[32m        }[m
[32m+[m
         public ExerciceAttribute(string nomExercice)[m
         {[m
             this.nomExercice = nomExercice;[m
[1mdiff --git a/OutilsTD/GestionTD.cs b/OutilsTD/GestionTD.cs[m
[1mindex fcf47da..b22469e 100644[m
[1m--- a/OutilsTD/GestionTD.cs[m
[1m+++ b/OutilsTD/GestionTD.cs[m
[36m@@ -1,5 +1,7 @@[m
[31m-ï»¿using System;[m
[32m+[m[32mï»¿using Microsoft.CodeAnalysis.CSharp.Syntax;[m
[32m+[m[32musing System;[m
 using System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
 using System.Reflection;[m
 using System.Text.RegularExpressions;[m
 [m
[36m@@ -9,6 +11,8 @@[m [mnamespace OutilsTD[m
     {[m
         Semestre semestre;[m
         int numeroTD;[m
[32m+[m
[32m+[m[32m        // not using sorted dictionary because key is a string (and 10 comes before 2...)[m
         Dictionary<string, KeyValuePair<string, Action>> exercices = new Dictionary<string, KeyValuePair<string, Action>>();[m
 [m
         public GestionTD(Semestre semestre, int numeroTD, Type classeTD)[m
[36m@@ -19,24 +23,92 @@[m [mnamespace OutilsTD[m
             string patternExo = @"^Exercice(?<n>\d+)(_(?<s>\d+)){0,1}$";[m
             foreach (MethodInfo methodInfo in classeTD.GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic))[m
             {[m
[32m+[m[32m                string keyExo = null;[m
[32m+[m[32m                bool exerciceSource = false;[m
[32m+[m[41m                [m
                 Match match = Regex.Match(methodInfo.Name, patternExo);[m
                 if (match.Success)[m
                 {[m
[31m-                    string keyExo = match.Groups["n"].Value;[m
[32m+[m[32m                    keyExo = match.Groups["n"].Value;[m
                     string subKey = match.Groups["s"].Value;[m
                     if(subKey != null && subKey.Length > 0) keyExo += "-" + subKey;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                string nomExercice = "";[m
[32m+[m[32m                List<ExerciceAttribute> exerciceAttributes = new List<ExerciceAttribute>(methodInfo.GetCustomAttributes<ExerciceAttribute>());[m
[32m+[m[32m                if (exerciceAttributes.Count > 0)[m
[32m+[m[32m                {[m
[32m+[m[32m                    ExerciceAttribute attr = exerciceAttributes[0];[m
[32m+[m[32m                    exerciceSource = attr.exerciceSource;[m
[32m+[m
[32m+[m[32m                    nomExercice = attr.nomExercice;[m
 [m
[31m-                    string nomExercice = "";[m
[31m-                    List<ExerciceAttribute> exerciceAttributes = new List<ExerciceAttribute>(methodInfo.GetCustomAttributes<ExerciceAttribute>());[m
[31m-                    if (exerciceAttributes.Count > 0)[m
[31m-                        nomExercice = exerciceAttributes[0].nomExercice;[m
[32m+[m[32m                    // if numeroExercice exists, it replace the value from method name[m
[32m+[m[32m                    if (attr.numeroExercice >= 0)[m
[32m+[m[32m                        keyExo = attr.numeroExercice.ToString();[m
 [m
[32m+[m[32m                    // if keyExercice exists, it replace the value from the method name or numeroExercice[m
[32m+[m[32m                    if (attr.keyExercice != null && attr.keyExercice.Trim().Length > 0)[m
[32m+[m[32m                        keyExo = attr.keyExercice.Trim();[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                if(keyExo != null && keyExo.Length > 0)[m
[32m+[m[32m                {[m
                     exercices.Add(keyExo, new KeyValuePair<string, Action>(nomExercice, () =>[m
                     {[m
[31m-                        methodInfo.Invoke(null, null);[m
[32m+[m[32m                        if (exerciceSource)[m
[32m+[m[32m                        {[m
[32m+[m[32m#if NO_SOURCE[m
[32m+[m[32m                            // Console.WriteLine("Impossible d'afficher la source de la mÃ©thode de cet exercice.");[m
[32m+[m[32m                            Console.WriteLine("Cette version de l'application n'a pas Ã©tÃ© compilÃ©e avec le code permettant d'afficher la source d'un exercice.");[m
[32m+[m[32m                            Console.WriteLine("Merci d'aller sur https://github.com/th0m4s/algo_esilv et de tÃ©lÃ©charger la version complÃ¨te du programme.");[m
[32m+[m[32m#else[m
[32m+[m[32m                            string methodSource = SourcesManager.GetMethodSource(classeTD.Name, methodInfo.Name);[m
[32m+[m[32m                            if(methodSource == null || methodSource.Trim().Length == 0)[m
[32m+[m[32m                            {[m
[32m+[m[32m                                Console.WriteLine("Impossible de trouver le code source de cet exercice.");[m
[32m+[m[32m                                Console.WriteLine("Il s'agit sÃ»rement d'un exercice compilÃ© sur le tas dont le fichier source n'a pas Ã©tÃ© retrouvÃ©.");[m
[32m+[m[32m                            } else[m
[32m+[m[32m                            {[m
[32m+[m[32m                                Console.WriteLine("Code source de l'exercice " + keyExo + (nomExercice.Length > 0 ? " (" + nomExercice + ")" : "") + " :\n");[m
[32m+[m[32m                                Console.WriteLine(methodSource);[m
[32m+[m[32m                            }[m
[32m+[m[32m#endif[m
[32m+[m[32m                        }[m
[32m+[m[32m                        else[m
[32m+[m[32m                        {[m
[32m+[m[32m                            Console.WriteLine("\nExecution de l'exercice " + keyExo + (nomExercice.Length > 0 ? " (" + nomExercice + ")" : "") + "...");[m
[32m+[m[32m                            methodInfo.Invoke(null, null);[m
[32m+[m[32m                        }[m
                     }));[m
                 }[m
[31m-            }     [m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // transform dictionary to list of keyvaluepairs, sort that list and transform it back to a dictionary[m
[32m+[m[32m            List<KeyValuePair<string, KeyValuePair<string, Action>>> exercicesList = exercices.ToList();[m
[32m+[m[32m            exercicesList.Sort((pairA, pairB) =>[m
[32m+[m[32m            {[m
[32m+[m[32m                // sort the keys by their parts, separated with '-'[m
[32m+[m
[32m+[m[32m                string keyA = pairA.Key, keyB = pairB.Key;[m
[32m+[m[32m                string[] partsA = keyA.Split('-'), partsB = keyB.Split('-');[m
[32m+[m
[32m+[m[32m                int lengthA = partsA.Length, lengthB = partsB.Length;[m
[32m+[m[32m                int maxLength = Math.Max(lengthA, lengthB);[m
[32m+[m
[32m+[m[32m                for (int i = 0; i < maxLength; i++)[m
[32m+[m[32m                {[m
[32m+[m[32m                    if (i >= lengthA) return -1;[m
[32m+[m[32m                    if (i >= lengthB) return 1;[m
[32m+[m
[32m+[m[32m                    int valueA = int.Parse(partsA[i]), valueB = int.Parse(partsB[i]);[m
[32m+[m[32m                    if (valueA != valueB) return valueA - valueB;[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                return 0;[m
[32m+[m[32m            });[m
[32m+[m[41m            [m
[32m+[m[32m            exercices = exercicesList.ToDictionary(pair => pair.Key, pair => pair.Value);[m
         }[m
 [m
         public bool MenuExercice()[m
[36m@@ -105,7 +177,6 @@[m [mnamespace OutilsTD[m
             {[m
                 KeyValuePair<string, Action> exercice = exercices[numeroExercice];[m
 [m
[31m-                Console.WriteLine("\nExecution de l'exercice " + numeroExercice + (exercice.Key.Length > 0 ? " (" + exercice.Key + ")" : "") + "...");[m
                 exercice.Value.Invoke();[m
             } else Console.WriteLine("Cet exercice n'existe pas.");[m
         }[m
[1mdiff --git a/OutilsTD/OutilsTD.csproj b/OutilsTD/OutilsTD.csproj[m
[1mindex 9f5c4f4..975a6a7 100644[m
[1m--- a/OutilsTD/OutilsTD.csproj[m
[1m+++ b/OutilsTD/OutilsTD.csproj[m
[36m@@ -2,6 +2,31 @@[m
 [m
   <PropertyGroup>[m
     <TargetFramework>netstandard2.0</TargetFramework>[m
[32m+[m[32m    <Configurations>Debug;Release;Release Light;Release NoSource;Release NoCompiler</Configurations>[m
   </PropertyGroup>[m
 [m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release NoCompiler|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_COMPILER</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Light|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_SOURCE;NO_COMPILER</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release NoSource|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_SOURCE</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <Choose>[m
[32m+[m[32m    <When Condition="'$(Configuration)' != 'Release Light' And '$(Configuration)' != 'Release NoSource'">[m
[32m+[m[32m      <ItemGroup>[m
[32m+[m[32m        <PackageReference Include="Microsoft.CodeAnalysis.CSharp">[m
[32m+[m[32m          <Version>3.8.0</Version>[m
[32m+[m[32m        </PackageReference>[m
[32m+[m[32m      </ItemGroup>[m
[32m+[m[32m    </When>[m
[32m+[m[32m    <Otherwise>[m
[32m+[m[32m    </Otherwise>[m
[32m+[m[32m  </Choose>[m
[32m+[m
 </Project>[m
[1mdiff --git a/OutilsTD/Semestre.cs b/OutilsTD/Semestre.cs[m
[1mindex 299dd63..ce03605 100644[m
[1m--- a/OutilsTD/Semestre.cs[m
[1m+++ b/OutilsTD/Semestre.cs[m
[36m@@ -9,6 +9,8 @@[m [mnamespace OutilsTD[m
         int annee;[m
         int semestre;[m
 [m
[32m+[m[32m        Dictionary<int, GestionTD> gestionsTD = new Dictionary<int, GestionTD>();[m
[32m+[m
         public Semestre(int semestre)[m
         {[m
             this.annee = (int)Math.Floor(semestre/2f) + 1;[m
[36m@@ -26,5 +28,13 @@[m [mnamespace OutilsTD[m
             string display = "AnnÃ©e " + annee + " Semestre " + semestre;[m
             return upperCase ? display.ToUpper() : display;[m
         }[m
[32m+[m
[32m+[m[32m        public GestionTD GetGestionTD(int keyTD, Type classeTD)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (!gestionsTD.ContainsKey(keyTD))[m
[32m+[m[32m                gestionsTD[keyTD] = new GestionTD(this, keyTD, classeTD);[m
[32m+[m
[32m+[m[32m            return gestionsTD[keyTD];[m
[32m+[m[32m        }[m
     }[m
 }[m
[1mdiff --git a/RuntimeCompiler/CompilerExercices.cs b/RuntimeCompiler/CompilerExercices.cs[m
[1mindex 338b5b4..6da831c 100644[m
[1m--- a/RuntimeCompiler/CompilerExercices.cs[m
[1m+++ b/RuntimeCompiler/CompilerExercices.cs[m
[36m@@ -1,13 +1,11 @@[m
 ï»¿using Microsoft.CSharp;[m
 using Newtonsoft.Json;[m
[31m-using OutilsTD;[m
 using System;[m
 using System.CodeDom.Compiler;[m
 using System.Collections.Generic;[m
 using System.IO;[m
 using System.Reflection;[m
 using System.Security.Cryptography;[m
[31m-using System.Text;[m
 using System.Text.RegularExpressions;[m
 [m
 namespace RuntimeCompiler[m
[1mdiff --git a/RuntimeCompiler/RuntimeCompiler.csproj b/RuntimeCompiler/RuntimeCompiler.csproj[m
[1mindex ad0bde0..1f1c733 100644[m
[1m--- a/RuntimeCompiler/RuntimeCompiler.csproj[m
[1m+++ b/RuntimeCompiler/RuntimeCompiler.csproj[m
[36m@@ -2,6 +2,19 @@[m
 [m
   <PropertyGroup>[m
     <TargetFramework>netstandard2.0</TargetFramework>[m
[32m+[m[32m    <Configurations>Debug;Release;Release Light;Release NoSource;Release NoCompiler</Configurations>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release NoCompiler|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_COMPILER</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release Light|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_COMPILER;NO_SOURCE</DefineConstants>[m
[32m+[m[32m  </PropertyGroup>[m
[32m+[m
[32m+[m[32m  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release NoSource|AnyCPU'">[m
[32m+[m[32m    <DefineConstants>TRACE;NO_SOURCE</DefineConstants>[m
   </PropertyGroup>[m
 [m
   <ItemGroup>[m
